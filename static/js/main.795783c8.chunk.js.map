{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js","config/dev.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","config","FEATURED_API","API","fetch","then","res","json","data","console","log","results","onSubmit","e","preventDefault","SEARCHED_API","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0MA+BeA,EAfD,SAAC,GAAD,IAXQC,EAWNC,EAAF,EAAEA,MAAQC,EAAV,EAAUA,YAAcC,EAAxB,EAAwBA,SAAWC,EAAnC,EAAmCA,aAAnC,OACV,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAhBG,sCAgBYJ,EAAaK,IAAKN,IACtC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAhBLL,EAgB2BI,EAf1CJ,GAAM,EACE,QACDA,GAAO,EACN,SAEA,QAUH,SAAuDI,OAG3D,sBAAKC,UAAU,aAAf,UACI,2CACA,4BAAIF,W,gBCgCDK,MAnDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQG,EAAR,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,EAAUC,IAAOC,gBACf,IAEJ,IAAMF,EAAY,SAACG,GACjBC,MAAMD,GACLE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZZ,EAAUY,EAAKG,aAkBnB,OACE,qCACE,iCACE,sBAAMC,SAjBW,SAACC,GACtBA,EAAEC,iBAECjB,IACDG,EAAUC,IAAOc,aAAelB,GAEhCC,EAAc,MAWZ,SACE,uBAAOR,UAAU,SAAS0B,KAAK,SAC3BC,YAAY,YACZC,MAAOrB,EACPsB,SAXW,SAACN,GACpBf,EAAce,EAAEO,OAAOF,cAcvB,qBAAK5B,UAAU,kBAAf,SACGK,EAAO0B,OAAS,GAAK1B,EAAO2B,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCvCXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,gBChBAa,EAAOC,QAAU,CACbrC,aAAe,sHACfa,aAAe,+F","file":"static/js/main.795783c8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/original\"\r\n\r\n\r\nconst setVoteClass = (vote) =>{\r\n    if(vote>=8){\r\n        return \"green\";\r\n    }else if (vote >=6){\r\n        return \"orange\";\r\n    }else {\r\n        return \"red\";\r\n    }\r\n}\r\n\r\n\r\nconst Movie = ({title , poster_path , overview , vote_average}) => (\r\n    <div className=\"movie\">\r\n        <img src={IMG_API + poster_path} alt={title} />\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\r\n        </div>\r\n\r\n        <div className=\"movie-over\">\r\n            <h2>Overview:</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Movie;","import React , {useEffect , useState } from \"react\";\n\nimport Movie from \"./components/Movie\";\n\nimport config from \"./config/dev\"\n\n\nfunction App() {\n  const [ movies, setMovies ] = useState([]);\n  const [ searchTerm,setSearchTerm] = useState('');\n\n  useEffect(()=> {\n    getMovies(config.FEATURED_API);\n  } , []);\n\n  const getMovies = (API) => {\n    fetch(API)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      setMovies(data.results);\n    })\n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if(searchTerm) {\n      getMovies(config.SEARCHED_API + searchTerm)\n\n      setSearchTerm(\"\");\n    }\n  }\n\n  const handleOnChange = (e) => {\n      setSearchTerm(e.target.value)\n  };\n  \n  return (\n    <>\n      <header>\n        <form onSubmit={handleOnSubmit}>\n          <input className=\"search\" type=\"search\" \n              placeholder=\"Search...\"\n              value={searchTerm}\n              onChange={handleOnChange}\n            />\n        </form>\n      </header>\n      <div className=\"movie-container\">\n        {movies.length > 0 && movies.map((movie) =>\n        <Movie key={movie.id} {...movie}  />)}\n      </div>\n    </>\n  );\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n    FEATURED_API : \"https://api.themoviedb.org/3/discover/movie?api_key=211ad7c9e563f6ea964fdafbe396953a&sort_by=popularity.desc&page=1\",\r\n    SEARCHED_API : \"https://api.themoviedb.org/3/search/movie?api_key=211ad7c9e563f6ea964fdafbe396953a&query=\"\r\n}"],"sourceRoot":""}